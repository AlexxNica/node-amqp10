/**
 * <h2>attach performative</h2>
 * <i>attach a Link to a Session</i>
 * 
 *           The  frame indicates that a Link Endpoint has been
 *           attached to the Session. The opening flag is used to indicate that the Link Endpoint is
 *           newly created.
 *         
 * attach
 * <h3>Descriptor</h3>
 * <dl>
 * <dt>Name</dt>
 * <dd>amqp:attach:list</dd>
 * <dt>Code</dt>
 * <dd>0x00000000:0x00000012</dd>
 * </dl>
 * 
 * <table>
 * <tr><th>Name</th><th>Type</th><th>Mandatory?</th></tr><tr><td>name</td><td>string</td><td>true</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2"><i>the name of the link</i>
 * 
 *             This name uniquely identifies the link from the container of the source to the container
 *             of the target node, e.g. if the container of the source node is A, and the container of
 *             the target node is B, the link may be globally identified by the (ordered) tuple
 *             .
 *           </td></tr>
 * <tr><td>handle</td><td>handle</td><td>true</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2">undefined
 * 
 *             The handle MUST NOT be used for other open Links. An attempt to attach using a handle
 *             which is already associated with a Link MUST be responded to with an immediate
 *              carrying a Handle-in-use .
 *            
 * close
 * 
 *              To make it easier to monitor AMQP link attach frames, it is recommended that
 *              implementations always assign the lowest available handle to this field.
 *            </td></tr>
 * <tr><td>role</td><td>role</td><td>true</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2"><i>role of the link endpoint</i></td></tr>
 * <tr><td>snd-settle-mode</td><td>sender-settle-mode</td><td>false</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2"><i>settlement mode for the Sender</i>
 * 
 *             Determines the settlement policy for deliveries sent at the Sender. When set at the
 *             Receiver this indicates the desired value for the settlement mode at the Sender.  When
 *             set at the Sender this indicates the actual settlement mode in use.
 *           </td></tr>
 * <tr><td>rcv-settle-mode</td><td>receiver-settle-mode</td><td>false</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2"><i>the settlement mode of the Receiver</i>
 * 
 *             Determines the settlement policy for unsettled deliveries received at the Receiver. When
 *             set at the Sender this indicates the desired value for the settlement mode at the
 *             Receiver. When set at the Receiver this indicates the actual settlement mode in use.
 *           </td></tr>
 * <tr><td>source</td><td>*</td><td>false</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2"><i>the source for Messages</i>
 * 
 *             If no source is specified on an outgoing Link, then there is no source currently
 *             attached to the Link. A Link with no source will never produce outgoing Messages.
 *           </td></tr>
 * <tr><td>target</td><td>*</td><td>false</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2"><i>the target for Messages</i>
 * 
 *             If no target is specified on an incoming Link, then there is no target currently
 *             attached to the Link. A Link with no target will never permit incoming Messages.
 *           </td></tr>
 * <tr><td>unsettled</td><td>map</td><td>false</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2"><i>unsettled delivery state</i>
 * 
 *             This is used to indicate any unsettled delivery states when a suspended link is resumed.
 *             The map is keyed by delivery-tag with values indicating the delivery state. The local
 *             and remote delivery states for a given delivery-tag MUST be compared to resolve any
 *             in-doubt deliveries. If necessary, deliveries MAY be resent, or resumed based on the
 *             outcome of this comparison. See .
 *           
 * resuming-deliveries
 * 
 *             If the local unsettled map is too large to be encoded within a frame of the agreed
 *             maximum frame size then the session may be ended with the frame-size-too-small error
 *             (see ). The endpoint SHOULD make use of the ability to send an
 *             incomplete unsettled map (see below) to avoid sending an error.
 *           
 * amqp-error
 * 
 *             The unsettled map MUST NOT contain null valued keys.
 *           
 * 
 *             When reattaching (as opposed to resuming), the unsettled map MUST be null.
 *           </td></tr>
 * <tr><td>incomplete-unsettled</td><td>boolean</td><td>false</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2">undefined
 * 
 *             If set to true this field indicates that the unsettled map provided is not complete.
 *             When the map is incomplete the recipient of the map cannot take the absence of a
 *             delivery tag from the map as evidence of settlement. On receipt of an incomplete
 *             unsettled map a sending endpoint MUST NOT send any new deliveries (i.e. deliveries where
 *             resume is not set to true) to its partner (and a receiving endpoint which sent an
 *             incomplete unsettled map MUST detach with an error on receiving a transfer which does
 *             not have the resume flag set to true).
 *           </td></tr>
 * <tr><td>initial-delivery-count</td><td>sequence-no</td><td>false</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2">undefined
 * 
 *             This MUST NOT be null if role is sender, and it is ignored if the role is receiver. See
 *             .
 *           
 * flow-control</td></tr>
 * <tr><td>max-message-size</td><td>ulong</td><td>false</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2"><i>the maximum message size supported by the link endpoint</i>
 * 
 *             This field indicates the maximum message size supported by the link endpoint. Any
 *             attempt to deliver a message larger than this results in a message-size-exceeded
 *             . If this field is zero or unset, there is no maximum size
 *             imposed by the link endpoint.
 *           
 * link-error</td></tr>
 * <tr><td>offered-capabilities</td><td>symbol</td><td>false</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2"><i>the extension capabilities the sender supports</i>
 * 
 *             A list of commonly defined session capabilities and their meanings can be found here:
 *             .
 *           
 * http://www.amqp.org/specification/1.0/link-capabilities</td></tr>
 * <tr><td>desired-capabilities</td><td>symbol</td><td>false</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2"><i>the extension capabilities the sender may use if the receiver supports them</i></td></tr>
 * <tr><td>properties</td><td>fields</td><td>false</td></tr>
 * <tr><td>&nbsp;</td><td colspan="2"><i>link properties</i>
 * 
 *             The properties map contains a set of fields intended to indicate information about the
 *             link and its container.
 *           
 * 
 *             A list of commonly defined link properties and their meanings can be found here:
 *             
 *           
 * http://www.amqp.org/specification/1.0/link-properties</td></tr>
 * </table>
 *
 * @constructor
 */