{"name":"Node-amqp-1-0","tagline":"AMQP 1.0-compliant Node.js client with no native code (e.g. Qpid Proton). ","body":"node-amqp-1-0\r\n=============\r\n\r\n[![Build Status](https://secure.travis-ci.org/noodlefrenzy/node-amqp-1-0.png?branch=master)](https://travis-ci.org/noodlefrenzy/node-amqp-1-0)\r\n[![Dependency Status](https://david-dm.org/noodlefrenzy/node-amqp-1-0.png)](https://david-dm.org/noodlefrenzy/node-amqp-1-0)\r\n\r\nAMQP 1.0-compliant Node.js client.  Since AMQP 1.0 is such a large departure from 0.9.1, \r\nI've started a new project rather than fork from node-amqp or amqp.node.  Both node-amqp and amqp.node are\r\ngreat 0.9.1 clients and I recommend them, but neither is pursuing a 1.0 implementation.  If I can find an\r\neasy way to integrate this code back into them, I'll definitely be submitting a PR.\r\n\r\n## Implementation Notes ##\r\n\r\nHere are my current implementation plans - if you have feedback or critiques on any of these choices, feel free to\r\nsubmit an Issue or even a PR.  Trust me, I don't take criticism personally, and I'm new to Nodejs so I could be making\r\n\"obviously bad\" choices to someone who is more familiar with the landscape.\r\n\r\n+   I'm planning on using Node's built-in net/socket classes for communicating with the server.\r\n+   Data from the server will be written to a circular buffer based on [CBarrick's](https://github.com/cbarrick/CircularBuffer).\r\n+   Outgoing data will be encoded using [this buffer builder](https://github.com/PeterReid/node-buffer-builder) - streaming\r\n    output won't really work since each outgoing payload needs to be prefixed with its encoded size.\r\n+   The connection state will be managed using [Stately.js](https://github.com/fschaefer/Stately.js), with state transitions\r\n    swapping which callback gets invoked on receipt of new data. (e.g. post-connection, we write the AMQP version header\r\n    and then install a callback to ensure the correct version.  Once incoming data is written to the circular buffer, this\r\n    callback is invoked, and a comparison vs. the expected version triggers another transition).\r\n+   Buffer comparisons are done via [Buffertools](https://github.com/bnoordhuis/node-buffertools).  Bit-twiddling is done\r\n    via [node-butils](https://github.com/nlf/node-butils), if necessary.\r\n\r\nFurther, detailed implementation nodes are available in the [API Readme](api/).\r\n\r\n## Protocol Notes ##\r\n\r\nThe [AMQP 1.0 Protocol](http://docs.oasis-open.org/amqp/core/v1.0/amqp-core-complete-v1.0.pdf) differs substantially \r\nfrom the [0.9.1 protocol](http://www.rabbitmq.com/resources/specs/amqp0-9-1.pdf), with 0.9.1 defining exchanges, brokers, \r\ntypes of queues (fanout, topic, etc.) and 1.0 focusing on more robust data interchange specifications and leaving much \r\nof the server implementation to the implementor.  This section is just attempting to document features of this protocol \r\nwith the aim of enlightening those looking into the defined classes (and helping me drive my implementation).\r\n\r\n+   Connection\r\n\r\n    An AMQP connection is a full-duplex ordered sequence of frames.\r\n    \r\n+   Frame\r\n\r\n    A Frame is the bitstream defining a full parsable unit.\r\n    \r\n+   Channel\r\n\r\n    A connection is divided into a negotiated number of independent unidirectional channels.  Frames are marked with\r\n    their parent channel number.\r\n    \r\n+   Session\r\n\r\n    Correlation of two channels to form a bi-di sequential conversation.\r\n    \r\n    Connections may have multiple independent sessions active simultaneously, up to the negotiated channel limit.\r\n\r\n+   Link\r\n    \r\n    Connection between two nodes.  Provides a credit-based flow-control scheme, each terminus of a link must track \r\n    stream state.  Links are named, and may outlive their associated connections, allowing reconnection and retention\r\n    of associated state.\r\n    \r\n## Caveats ##\r\n\r\nNOT YET IMPLEMENTED!  I'm just starting on this work - please ignore this repo for now.  Unless you want to help,\r\nin which case PR's are welcome :)\r\n\r\n## License ##\r\n\r\nMIT License.  If you need a more permissive license, or you want to try your hand at integrating this code into\r\nnode-amqp or amqp.node and need to match their license, let me know (i.e. open an issue).\r\n","google":"UA-54597100-2","note":"Don't delete this file! It's used internally to help with page regeneration."}